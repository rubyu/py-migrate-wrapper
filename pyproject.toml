[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "migrate-wrapper"
version = "0.1.6"
description = "Python wrapper for golang-migrate/migrate CLI tool"
readme = "README.md"
packages = ["src/migrate_wrapper"]
requires-python = ">= 3.12"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["migrate", "database", "migration", "golang-migrate", "wrapper"]
dependencies = [
    # No runtime dependencies - this is a wrapper for the migrate CLI tool
]

[project.urls]
"Homepage" = "https://github.com/rubyu/py-migrate-wrapper"
"Bug Tracker" = "https://github.com/rubyu/py-migrate-wrapper/issues"
"Repository" = "https://github.com/rubyu/py-migrate-wrapper"
"Documentation" = "https://github.com/rubyu/py-migrate-wrapper#readme"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.4.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pytest-asyncio>=1.0.0",
    "pytest-xdist>=3.5.0",
    "build>=1.0.0",
    # Database drivers for testing only
    "psycopg>=3.2.9",
    "psycopg-binary>=3.2.9",
    "psycopg-pool>=3.2.6",
]

[tool.hatch.build.targets.wheel]
packages = ["src/migrate_wrapper"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/pyproject.toml",
    "/Makefile",
]
exclude = [
    "/.github",
    "/bin",
    "/pglite-server/node_modules",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short -n auto --cov=src/migrate_wrapper --cov-report=term-missing"
markers = [
    "requires_pglite: marks tests as requiring PGlite (PostgreSQL)",
]
# Configure pytest-xdist for parallel execution
junit_family = "xunit2"
# Ensure each worker gets its own temp directory
tmp_path_retention_count = 0
tmp_path_retention_policy = "none"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
