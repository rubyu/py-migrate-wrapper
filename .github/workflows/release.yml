name: Release

on:
  workflow_run:
    workflows: ["Version Bump"]
    types:
      - completed
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: migrate_test
          POSTGRES_USER: migrate_user
          POSTGRES_PASSWORD: migrate_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install rye
      uses: eifinger/setup-rye@v4
      with:
        enable-cache: true

    - name: Sync dependencies
      run: rye sync

    - name: Setup migrate CLI
      run: make setup-migrate

    - name: Run tests
      run: rye test
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: migrate_user
        POSTGRES_PASSWORD: migrate_pass
        POSTGRES_DB: migrate_test

    - name: Get version from pyproject.toml
      id: get_version
      run: |
        VERSION=$(rye version)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $VERSION"

    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Build package
      if: steps.check_tag.outputs.exists == 'false'
      run: rye build

    - name: Create GitHub Release
      if: steps.check_tag.outputs.exists == 'false'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: |
          ## Changes in v${{ steps.get_version.outputs.version }}
          
          Auto-generated release from main branch.
          
          ### Installation
          Download the wheel or source from the release assets, or clone the repository.
          
          ### What's Changed
          - See commit history for detailed changes
          
          **Full Changelog**: https://github.com/${{ github.repository }}/commits/v${{ steps.get_version.outputs.version }}
        files: |
          ./dist/migrate_wrapper-${{ steps.get_version.outputs.version }}-py3-none-any.whl
          ./dist/migrate_wrapper-${{ steps.get_version.outputs.version }}.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

